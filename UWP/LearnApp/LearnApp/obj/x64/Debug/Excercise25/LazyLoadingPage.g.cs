#pragma checksum "D:\UWP\UWP\LearnApp\LearnApp\Excercise25\LazyLoadingPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "DC6CFBD7E7BD657CBBFE932695509566"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LearnApp.Excercise25
{
    partial class LazyLoadingPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class LazyLoadingPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ILazyLoadingPage_Bindings
        {
            private global::LearnApp.Excercise25.LazyLoadingPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Shapes.Rectangle obj6;
            private global::System.Boolean obj6LoadDeferredValue;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj7;
            private global::System.Boolean obj7LoadDeferredValue;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6LoadDisabled = false;
            private static bool isobj7LoadDisabled = false;
            private global::System.Collections.Generic.Queue<global::System.Int32> UnloadedElementsToUpdate = new global::System.Collections.Generic.Queue<global::System.Int32>();

            private LazyLoadingPage_obj1_BindingsTracking bindingsTracking;

            public LazyLoadingPage_obj1_Bindings()
            {
                this.bindingsTracking = new LazyLoadingPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 25 && columnNumber == 33)
                {
                    isobj6LoadDisabled = true;
                }
                else if (lineNumber == 27 && columnNumber == 33)
                {
                    isobj7LoadDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Excercise25\LazyLoadingPage.xaml line 24
                        this.obj6 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 7: // Excercise25\LazyLoadingPage.xaml line 26
                        this.obj7 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ILazyLoadingPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                switch (connectionId)
                {
                    case 6: // Excercise25\LazyLoadingPage.xaml line 24
                    {
                        if (this.obj6 != null)
                        {
                            this.obj6 = null;
                        }
                        break;
                    }
                    case 7: // Excercise25\LazyLoadingPage.xaml line 26
                    {
                        if (this.obj7 != null)
                        {
                            this.obj7 = null;
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            private void UpdateUnloadedElement(int connectionId)
            {
                switch (connectionId)
                {
                    case 6: // Excercise25\LazyLoadingPage.xaml line 24
                    {
                        // Excercise25\LazyLoadingPage.xaml line 24
                        if (!isobj6LoadDisabled)
                        {
                            if (this.obj6LoadDeferredValue)
                            {
                                dataRoot.FindName("one");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj6);
                            }
                        }
                        break;
                    }
                    case 7: // Excercise25\LazyLoadingPage.xaml line 26
                    {
                        // Excercise25\LazyLoadingPage.xaml line 26
                        if (!isobj7LoadDisabled)
                        {
                            if (this.obj7LoadDeferredValue)
                            {
                                dataRoot.FindName("two");
                            }
                            else
                            {
                                dataRoot.UnloadObject(this.obj7);
                            }
                        }
                        break;
                    }
                    default:
                    {
                        throw new global::System.ArgumentException("Invalid connectionId.");
                    }
                }
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::LearnApp.Excercise25.LazyLoadingPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            private bool TryGet_CheckBox1_IsChecked(out global::System.Nullable<global::System.Boolean> val)
            {
                global::Windows.UI.Xaml.Controls.CheckBox obj;
                if (TryGet_CheckBox1(out obj) && obj != null)
                {
                    val = obj.IsChecked;
                    return true;
                }
                else
                {
                    val = default(global::System.Nullable<global::System.Boolean>);
                    return false;
                }
            }

            private bool TryGet_CheckBox1(out global::Windows.UI.Xaml.Controls.CheckBox val)
            {
                global::LearnApp.Excercise25.LazyLoadingPage obj;
                if (TryGet_(out obj) && obj != null)
                {
                    val = obj.CheckBox1;
                    return true;
                }
                else
                {
                    val = default(global::Windows.UI.Xaml.Controls.CheckBox);
                    return false;
                }
            }

            private bool TryGet_(out global::LearnApp.Excercise25.LazyLoadingPage val)
            {
                val = this.dataRoot;
                return true;
            }

            private delegate void InvokeFunctionDelegate(int phase);
            private global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate> PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();

            private void Invoke_M_Not_2137142941(int phase)
            {
                global::System.Nullable<global::System.Boolean> p0;
                if (!TryGet_CheckBox1_IsChecked(out p0)) { return; }
                global::System.Boolean result = this.dataRoot.Not(p0);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Excercise25\LazyLoadingPage.xaml line 26
                    if (!isobj7LoadDisabled)
                    {
                        this.obj7LoadDeferredValue = result;
        
                        if (result)
                        {
                            dataRoot.FindName("two");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj7);
                        }
                    }
                }
            }

            private void CompleteUpdate(int phase)
            {
                var functions = this.PendingFunctionBindings;
                this.PendingFunctionBindings = new global::System.Collections.Generic.Dictionary<string, InvokeFunctionDelegate>();
                foreach (var function in functions.Values)
                {
                    function.Invoke(phase);
                }
                while (this.UnloadedElementsToUpdate.Count > 0)
                {
                    this.UpdateUnloadedElement(this.UnloadedElementsToUpdate.Dequeue());
                }
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::LearnApp.Excercise25.LazyLoadingPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CheckBox1(obj.CheckBox1, phase);
                        this.Update_M_Not_2137142941(phase);
                    }
                }
                this.CompleteUpdate(phase);
            }
            private void Update_CheckBox1(global::Windows.UI.Xaml.Controls.CheckBox obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_CheckBox1(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CheckBox1_IsChecked(obj.IsChecked, phase);
                    }
                }
            }
            private void Update_CheckBox1_IsChecked(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_CheckBox1_IsChecked_Cast_IsChecked_To_Boolean((global::System.Boolean)obj, phase);
                    }
                }
                if (obj != null)
                {
                    this.Update_M_Not_2137142941(phase);
                }
            }
            private void Update_CheckBox1_IsChecked_Cast_IsChecked_To_Boolean(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Excercise25\LazyLoadingPage.xaml line 24
                    if (!isobj6LoadDisabled)
                    {
                        this.obj6LoadDeferredValue = obj;
        
                        if (obj)
                        {
                            dataRoot.FindName("one");
                        }
                        else
                        {
                            dataRoot.UnloadObject(this.obj6);
                        }
                    }
                }
            }
            private void Update_M_Not_2137142941(int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    if (!isobj7LoadDisabled)
                    {
                        this.PendingFunctionBindings["M_Not_2137142941"] = new InvokeFunctionDelegate(this.Invoke_M_Not_2137142941); 
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LazyLoadingPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<LazyLoadingPage_obj1_Bindings> weakRefToBindingObj; 

                public LazyLoadingPage_obj1_BindingsTracking(LazyLoadingPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LazyLoadingPage_obj1_Bindings>(obj);
                }

                public LazyLoadingPage_obj1_Bindings TryGetBindingObject()
                {
                    LazyLoadingPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_CheckBox1(null);
                }

                public void DependencyPropertyChanged_CheckBox1_IsChecked(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    LazyLoadingPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Windows.UI.Xaml.Controls.CheckBox obj = sender as global::Windows.UI.Xaml.Controls.CheckBox;
                        if (obj != null)
                        {
                            bindings.Update_CheckBox1_IsChecked(obj.IsChecked, DATA_CHANGED);
                        }
                        bindings.CompleteUpdate(DATA_CHANGED);
                    }
                }
                private global::Windows.UI.Xaml.Controls.CheckBox cache_CheckBox1 = null;
                private long tokenDPC_CheckBox1_IsChecked = 0;
                public void UpdateChildListeners_CheckBox1(global::Windows.UI.Xaml.Controls.CheckBox obj)
                {
                    if (obj != cache_CheckBox1)
                    {
                        if (cache_CheckBox1 != null)
                        {
                            cache_CheckBox1.UnregisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, tokenDPC_CheckBox1_IsChecked);
                            cache_CheckBox1 = null;
                        }
                        if (obj != null)
                        {
                            cache_CheckBox1 = obj;
                            tokenDPC_CheckBox1_IsChecked = obj.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton.IsCheckedProperty, DependencyPropertyChanged_CheckBox1_IsChecked);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Excercise25\LazyLoadingPage.xaml line 11
                {
                    this.DeferredGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Excercise25\LazyLoadingPage.xaml line 30
                {
                    global::Windows.UI.Xaml.Controls.Button element3 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element3).Click += this.LoadElements_Click;
                }
                break;
            case 4: // Excercise25\LazyLoadingPage.xaml line 31
                {
                    global::Windows.UI.Xaml.Controls.Button element4 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element4).Click += this.UnloadElements_Click;
                }
                break;
            case 5: // Excercise25\LazyLoadingPage.xaml line 32
                {
                    this.CheckBox1 = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                }
                break;
            case 6: // Excercise25\LazyLoadingPage.xaml line 24
                {
                    this.one = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            case 7: // Excercise25\LazyLoadingPage.xaml line 26
                {
                    this.two = (global::Windows.UI.Xaml.Shapes.Rectangle)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// UnloadObject(DependencyObject)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        partial void UnloadObject(global::Windows.UI.Xaml.DependencyObject unloadableObject)
        {
            if (unloadableObject != null)
            {
                // Excercise25\LazyLoadingPage.xaml line 11
                if (unloadableObject == this.DeferredGrid)
                { 
                    this.DisconnectUnloadedObject(2);
                }
                // Excercise25\LazyLoadingPage.xaml line 24
                if (unloadableObject == this.one)
                { 
                    this.DisconnectUnloadedObject(6);
                }
                // Excercise25\LazyLoadingPage.xaml line 26
                if (unloadableObject == this.two)
                { 
                    this.DisconnectUnloadedObject(7);
                }
                global::Windows.UI.Xaml.Markup.XamlMarkupHelper.UnloadObject(unloadableObject);
            }
        }

        /// <summary>
        /// DisconnectUnloadedObject(int connectionId)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void DisconnectUnloadedObject(int connectionId)
        {
            switch(connectionId)
            {
                case 2: // Excercise25\LazyLoadingPage.xaml line 11
                {
                    this.DisconnectUnloadedObject(6);
                    this.Bindings.DisconnectUnloadedObject(6);
                    this.DisconnectUnloadedObject(7);
                    this.Bindings.DisconnectUnloadedObject(7);
                    this.DeferredGrid = null;
                    break;
                }
                case 6: // Excercise25\LazyLoadingPage.xaml line 24
                {
                    this.Bindings.DisconnectUnloadedObject(6);
                    this.one = null;
                    break;
                }
                case 7: // Excercise25\LazyLoadingPage.xaml line 26
                {
                    this.Bindings.DisconnectUnloadedObject(7);
                    this.two = null;
                    break;
                }
                default:
                {
                    throw new global::System.ArgumentException("Invalid connectionId.");
                }
            }
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Excercise25\LazyLoadingPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    LazyLoadingPage_obj1_Bindings bindings = new LazyLoadingPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

